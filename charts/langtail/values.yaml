# Default values for langtail.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: langtail/langtail
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

migrationsImage:
  repository: langtail/langtail-db-migrations
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 1000m
    memory: 1Gi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

extraManifests: []

# ENVs
EVALUATOR_URL: "https://default-evaluator-url.com"
SKIP_ENV_VALIDATION: "false"
SENTRY_ENABLED: "true"
AUTH_URL: "https://default-auth-url.com"
GITHUB_ID: "default-github-id"
GOOGLE_ID: "default-google-id"
EMAIL_FROM: "default@example.com"
IS_E2E_TEST: "false"

# Secret ENVs
DATABASE_URL: "mysql://user:password@localhost:3306/database"
MIGRATIONS_DATABASE_URL: "mysql://user:password@localhost:3306/database"
PRISMA_FIELD_ENCRYPTION_KEY: "default-prisma-field-encryption-key"
TINYBIRD_API_TOKEN: "default-tinybird-api-token"
TINYBIRD_API_KEY: "default-tinybird-api-key"
JWT_PRIVATE: "default-jwt-private-key"
JWT_PUBLIC: "default-jwt-public-key"
EVALUATOR_API_KEY: "default-evaluator-api-key"
CANNY_JWT_KEY: "default-canny-jwt-key"
LANGTAIL_MAGIC_TOKEN: "default-langtail-magic-token"
IMAGES_AWS_SECRET_ACCESS_KEY: "default-aws-secret-access-key"
LOOPS_API_KEY: "default-loops-api-key"
STRIPE_SECRET_KEY: "default-stripe-secret-key"
LANGTAIL_MAGIC_TESTS_TOKEN: "default-langtail-magic-tests-token"
NEXT_PUBLIC_REWARDFUL_API_KEY: "default-rewardful-api-key"
AUTH_SECRET: "default-auth-secret"
GITHUB_SECRET: "default-github-secret"
GOOGLE_SECRET: "default-google-secret"
JWT_SIGNING_KEY: "default-jwt-signing-key"
SMTP_URL: "smtp://user:password@smtp.example.com:587"
EMAIL_VERIFICATION_SECRET: "default-email-verification-secret"
